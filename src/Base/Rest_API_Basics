RestAssured_API_Concepts
project=Selenium_All_concepts
Selenium_concepts
api-tests —LUMETA
cucumber_project-master

Send File via API:-
Response getResponse = given()
        .header("Connection", "keep-alive")
        .header("Pragma", "no-cache")
        .header("Cache-Control", "no-cache")
        .header("Accept", "application/json, text/plain, */*")
        .header("X-x15-sessionId", sessionId)
        .when()
        .multiPart("file", new File(filePath))
        .multiPart("params", load)
        .request(Method.PUT, apiPath)
        .then()
        .extract()
        .response();


API Get call and verify Data
{
    given().
            get("https://reqres.in/api/users?page=2").
            then().
            statusCode(200).
            body("data.id[1]",equalTo(8)).
            body ("data.first_name", hasItems("Michael","Lindsay"));

}


Form Param In API
given().formParams("username", "john","password","1234").post("/");

TO add Multiple Headers
given().headers("User-Agent", "MyAppName", "Accept-Charset", "utf-8")
given().pathParams("owner", "eugenp", "repo", "tutorials")


Add Cookies In API:
given().cookie("session_id", "1234").when().get("/users/eugenp")

customize our cookie using cookie Builder:
Cookie myCookie = new Cookie.Builder("session_id", "1234")
      .setSecured(true)
      .setComment("session id cookie")
      .build();

    given().cookie(myCookie)
      .when().get("/users/eugenp")
      .then().statusCode(200);




  Cookie cookie = given()
        .contentType(JSON)
        .body(loginRequest)
    .when()
        .post(String.format("%s://%s:%d%s%s", SCHEME, HOST, PORT, BASE_PATH, LOGIN_ENDPOINT))
    .then()
        .statusCode(is(SC_NO_CONTENT))
        .cookie(COOKIE_NAME, not(isEmptyString()))
        .extract().detailedCookie(COOKIE_NAME);


Child to parent
<div class="aio UKr6le">
	<span class="nU n1">
		<a href="https://mail.google.com/x" target="_top" class="J-Ke n0" >Inbox</a>
	</span>
	<div class="bsU">2,437</div></div>

1 method :- (//a[text()='Inbox']/ancestor::span)/following-sibling::div
2 method :- //a[text()='Inbox']/parent::span//following-sibling::div
3 method     //a[text()='Inbox']//..//following-sibling::div

4 method (//input[text()='Inbox']/descendant::span) [ to get all 'span' of 'input' ]
5 method :- //div[@class='sort']/preceding-sibling::input  [ sibling element preceding to the current context node ]


div p	  ----//div//p
ul > li	----- //ul/li
ul > li > a	------ //ul/li/a
div > *	-------//div/*
.class	-------//*[@class="class"]
.filter	------- //*[@class="filter"]
h1 ~ ul	--------//h1/following-sibling::ul	?
h1 + ul	---------//h1/following-sibling::ul[1]
h1 ~ #id	---------//h1/following-sibling::[@id="id"]
//button[child::span[@class="MuiIconButton-label"]]   find button which child is span
//button[child::span]
//label[span]  ------ # find a <label> with an <span> inside it

//a | //span ----- Use | to join two expressions and output will be find element by //a and //span
//a[@id="favourites"] | //span[@class="checkmark"]



To handel SVG tag
//*[name()='svg']//*[name()='span']

UI Automation
//         FirefoxOptions options = new FirefoxOptions();
            options.setAcceptInsecureCerts(true);

API Automation
        RestAssured.useRelaxedHTTPSValidation();
        javax.net.ssl.SSLHandshakeException:
        sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target

//
given().log().all()
       .pathParam("agreementId", "1234")
       .queryParam("agreementType", "CHQ")
       .when()
       .get("https://localhost/v1/agreement/{agreementId}");


Key Difference Between Test Plan and Test Strategy
Test Plan is a document that describes the scope, objective and weight on software testing task whereas Test Strategy describes how testing needs to be done.
Test Plan is used at the project level whereas Test Strategy is used at the organization level.
Test Plan has the primary goal of how to test, when to test and who will verify whereas Test Strategy has the primary goal of what technique to follow and which module to check.
Test Plan can be changed whereas Test Strategy can’t change.
Test Plan is carried out by the test manager whereas the Test Strategy is carried out by the project manager.

What is Test Plan?
The test plan is a base of software testing. It is a detailed document, which includes several testing attributes such as test objectives, scope, test schedule, template, required resources (human resources, software, and hardware), test estimation and test deliverables, risk, mitigation plan, defect tracking, entry and exit criteria, test environment, etc., which defines software testing areas and activities.

What is a Test Strategy?
The test strategy is a high-level document used to validate the test levels to be executed for the product. And it also describes what kind of technique has to be used and which module will be tested.
It contains various components like documentation formats, objectives, test processes, scope, customer communication strategy, etc.
The Test Strategy's main purpose is to deliver a systematic approach to the software testing process to ensure reliability, quality, traceability, and better planning.


TODO What is Chrome Options Class?
The Chromeoptions Class is a concept in Selenium WebDriver for manipulating various properties of the Chrome driver. The Chrome options class is generally used in conjunction with Desired Capabilities for customizing Chrome driver sessions. It helps you perform various operations like opening Chrome in maximized mode, disable existing extensions, disable pop-ups, etc

TODO DesiredCapabilities
Desired Capabilities Class is used to modify multiple properties of web drivers. It provides key-value pairs to change individual properties of web drivers such as browser name, browser platform, etc. A common method of Desired Capabilities class is the setCapability method. It is mostly used with Selenium Grid, where the same test case needs to be executed on different browsers.

